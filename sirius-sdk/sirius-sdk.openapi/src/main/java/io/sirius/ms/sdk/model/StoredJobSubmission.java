/*
 *  This file is part of the SIRIUS libraries for analyzing MS and MS/MS data
 *
 *  Copyright (C) 2024 Bright Giant GmbH
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along with SIRIUS.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 *  https://openapi-generator.tech
 *  Do not edit the class manually.
 */


package io.sirius.ms.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.sirius.ms.sdk.model.JobSubmission;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * StoredJobSubmission
 */
@JsonPropertyOrder({
  StoredJobSubmission.JSON_PROPERTY_NAME,
  StoredJobSubmission.JSON_PROPERTY_EDITABLE,
  StoredJobSubmission.JSON_PROPERTY_JOB_SUBMISSION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.6.0")
public class StoredJobSubmission {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_EDITABLE = "editable";
  private Boolean editable;

  public static final String JSON_PROPERTY_JOB_SUBMISSION = "jobSubmission";
  private JobSubmission jobSubmission;

  public StoredJobSubmission() {
  }

  public StoredJobSubmission name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Unique name to identify this JobSubmission (job config).
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }

  public StoredJobSubmission editable(Boolean editable) {
    
    this.editable = editable;
    return this;
  }

   /**
   * False for predefined configs which are not editable and not removable.
   * @return editable
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EDITABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean isEditable() {
    return editable;
  }


  @JsonProperty(JSON_PROPERTY_EDITABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEditable(Boolean editable) {
    this.editable = editable;
  }

  public StoredJobSubmission jobSubmission(JobSubmission jobSubmission) {
    
    this.jobSubmission = jobSubmission;
    return this;
  }

   /**
   * Get jobSubmission
   * @return jobSubmission
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_JOB_SUBMISSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public JobSubmission getJobSubmission() {
    return jobSubmission;
  }


  @JsonProperty(JSON_PROPERTY_JOB_SUBMISSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setJobSubmission(JobSubmission jobSubmission) {
    this.jobSubmission = jobSubmission;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StoredJobSubmission storedJobSubmission = (StoredJobSubmission) o;
    return Objects.equals(this.name, storedJobSubmission.name) &&
        Objects.equals(this.editable, storedJobSubmission.editable) &&
        Objects.equals(this.jobSubmission, storedJobSubmission.jobSubmission);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, editable, jobSubmission);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StoredJobSubmission {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    editable: ").append(toIndentedString(editable)).append("\n");
    sb.append("    jobSubmission: ").append(toIndentedString(jobSubmission)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

