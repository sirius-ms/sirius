/*
 *  This file is part of the SIRIUS libraries for analyzing MS and MS/MS data
 *
 *  Copyright (C) 2024 Bright Giant GmbH
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along with SIRIUS.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 *  https://openapi-generator.tech
 *  Do not edit the class manually.
 */


package io.sirius.ms.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.sirius.ms.sdk.model.AggregationType;
import io.sirius.ms.sdk.model.QuantMeasure;
import io.sirius.ms.sdk.model.QuantRowType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * FoldChange
 */
@JsonPropertyOrder({
  FoldChange.JSON_PROPERTY_LEFT_GROUP,
  FoldChange.JSON_PROPERTY_RIGHT_GROUP,
  FoldChange.JSON_PROPERTY_AGGREGATION,
  FoldChange.JSON_PROPERTY_QUANTIFICATION,
  FoldChange.JSON_PROPERTY_QUANT_TYPE,
  FoldChange.JSON_PROPERTY_OBJECT_ID,
  FoldChange.JSON_PROPERTY_FOLD_CHANGE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.6.0")
public class FoldChange {
  public static final String JSON_PROPERTY_LEFT_GROUP = "leftGroup";
  private String leftGroup;

  public static final String JSON_PROPERTY_RIGHT_GROUP = "rightGroup";
  private String rightGroup;

  public static final String JSON_PROPERTY_AGGREGATION = "aggregation";
  private AggregationType aggregation;

  public static final String JSON_PROPERTY_QUANTIFICATION = "quantification";
  private QuantMeasure quantification;

  public static final String JSON_PROPERTY_QUANT_TYPE = "quantType";
  private QuantRowType quantType;

  public static final String JSON_PROPERTY_OBJECT_ID = "objectId";
  private String objectId;

  public static final String JSON_PROPERTY_FOLD_CHANGE = "foldChange";
  private Double foldChange;

  public FoldChange() {
  }

  public FoldChange leftGroup(String leftGroup) {
    
    this.leftGroup = leftGroup;
    return this;
  }

   /**
   * Get leftGroup
   * @return leftGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEFT_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLeftGroup() {
    return leftGroup;
  }


  @JsonProperty(JSON_PROPERTY_LEFT_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLeftGroup(String leftGroup) {
    this.leftGroup = leftGroup;
  }

  public FoldChange rightGroup(String rightGroup) {
    
    this.rightGroup = rightGroup;
    return this;
  }

   /**
   * Get rightGroup
   * @return rightGroup
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RIGHT_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRightGroup() {
    return rightGroup;
  }


  @JsonProperty(JSON_PROPERTY_RIGHT_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRightGroup(String rightGroup) {
    this.rightGroup = rightGroup;
  }

  public FoldChange aggregation(AggregationType aggregation) {
    
    this.aggregation = aggregation;
    return this;
  }

   /**
   * Get aggregation
   * @return aggregation
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGGREGATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AggregationType getAggregation() {
    return aggregation;
  }


  @JsonProperty(JSON_PROPERTY_AGGREGATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAggregation(AggregationType aggregation) {
    this.aggregation = aggregation;
  }

  public FoldChange quantification(QuantMeasure quantification) {
    
    this.quantification = quantification;
    return this;
  }

   /**
   * Get quantification
   * @return quantification
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUANTIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public QuantMeasure getQuantification() {
    return quantification;
  }


  @JsonProperty(JSON_PROPERTY_QUANTIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantification(QuantMeasure quantification) {
    this.quantification = quantification;
  }

  public FoldChange quantType(QuantRowType quantType) {
    
    this.quantType = quantType;
    return this;
  }

   /**
   * Get quantType
   * @return quantType
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_QUANT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public QuantRowType getQuantType() {
    return quantType;
  }


  @JsonProperty(JSON_PROPERTY_QUANT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQuantType(QuantRowType quantType) {
    this.quantType = quantType;
  }

  public FoldChange objectId(String objectId) {
    
    this.objectId = objectId;
    return this;
  }

   /**
   * Get objectId
   * @return objectId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getObjectId() {
    return objectId;
  }


  @JsonProperty(JSON_PROPERTY_OBJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setObjectId(String objectId) {
    this.objectId = objectId;
  }

  public FoldChange foldChange(Double foldChange) {
    
    this.foldChange = foldChange;
    return this;
  }

   /**
   * Get foldChange
   * @return foldChange
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FOLD_CHANGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getFoldChange() {
    return foldChange;
  }


  @JsonProperty(JSON_PROPERTY_FOLD_CHANGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFoldChange(Double foldChange) {
    this.foldChange = foldChange;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FoldChange foldChange = (FoldChange) o;
    return Objects.equals(this.leftGroup, foldChange.leftGroup) &&
        Objects.equals(this.rightGroup, foldChange.rightGroup) &&
        Objects.equals(this.aggregation, foldChange.aggregation) &&
        Objects.equals(this.quantification, foldChange.quantification) &&
        Objects.equals(this.quantType, foldChange.quantType) &&
        Objects.equals(this.objectId, foldChange.objectId) &&
        Objects.equals(this.foldChange, foldChange.foldChange);
  }

  @Override
  public int hashCode() {
    return Objects.hash(leftGroup, rightGroup, aggregation, quantification, quantType, objectId, foldChange);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FoldChange {\n");
    sb.append("    leftGroup: ").append(toIndentedString(leftGroup)).append("\n");
    sb.append("    rightGroup: ").append(toIndentedString(rightGroup)).append("\n");
    sb.append("    aggregation: ").append(toIndentedString(aggregation)).append("\n");
    sb.append("    quantification: ").append(toIndentedString(quantification)).append("\n");
    sb.append("    quantType: ").append(toIndentedString(quantType)).append("\n");
    sb.append("    objectId: ").append(toIndentedString(objectId)).append("\n");
    sb.append("    foldChange: ").append(toIndentedString(foldChange)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

