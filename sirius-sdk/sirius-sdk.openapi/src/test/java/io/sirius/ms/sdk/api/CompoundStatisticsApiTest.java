/*
 *  This file is part of the SIRIUS libraries for analyzing MS and MS/MS data
 *
 *  Copyright (C) 2024 Bright Giant GmbH
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along with SIRIUS.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 *  https://openapi-generator.tech
 *  Do not edit the class manually.
 */


package io.sirius.ms.sdk.api;

import io.sirius.ms.sdk.model.*;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for CompoundStatisticsApi
 */
@Ignore
public class CompoundStatisticsApiTest {

    private final CompoundStatisticsApi api = new CompoundStatisticsApi();

    
    /**
     * [EXPERIMENTAL] Compute the fold change between two groups of runs
     *
     * [EXPERIMENTAL] Compute the fold change between two groups of runs.  &lt;p&gt;  The runs need to be tagged and grouped.  &lt;p&gt;  [EXPERIMENTAL] This endpoint is experimental and not part of the stable API specification. This endpoint can change at any time, even in minor updates.
     */
    @Test
    public void computeCompoundFoldChangesExperimentalTest()  {
        String projectId = null;
        String leftGroupName = null;
        String rightGroupName = null;
        AggregationType aggregation = null;
        QuantMeasure quantification = null;
        List<JobOptField> optFields = null;
        Job response = api.computeCompoundFoldChangesExperimental(projectId, leftGroupName, rightGroupName, aggregation, quantification, optFields);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] Delete fold changes
     *
     * [EXPERIMENTAL] Delete fold changes.  &lt;p&gt;  [EXPERIMENTAL] This endpoint is experimental and not part of the stable API specification. This endpoint can change at any time, even in minor updates.
     */
    @Test
    public void deleteCompoundFoldChangesExperimentalTest()  {
        String projectId = null;
        String leftGroupName = null;
        String rightGroupName = null;
        AggregationType aggregation = null;
        QuantMeasure quantification = null;
        api.deleteCompoundFoldChangesExperimental(projectId, leftGroupName, rightGroupName, aggregation, quantification);

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] Get table of all fold changes in the project space
     *
     * [EXPERIMENTAL] Get table of all fold changes in the project space.  &lt;p&gt;  [EXPERIMENTAL] This endpoint is experimental and not part of the stable API specification. This endpoint can change at any time, even in minor updates.
     */
    @Test
    public void getCompoundFoldChangeTableExperimentalTest()  {
        String projectId = null;
        AggregationType aggregation = null;
        QuantMeasure quantification = null;
        StatisticsTable response = api.getCompoundFoldChangeTableExperimental(projectId, aggregation, quantification);

        // TODO: test validations
    }
}
